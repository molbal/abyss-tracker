## Autogenerated by Scribe. DO NOT MODIFY.

name: Fits
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/conduit/v1/fits/list
    metadata:
      title: 'List fits'
      description: 'Lists all fits selectable by the authenticated user: public fits, incognito fits, and users'' private fits. Cached for a minute.'
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      flexibleFitHash:
        name: flexibleFitHash
        description: 'Fit hash to match (full match, lowercase, see https://github.com/molbal/abyss-tracker/wiki/Flexible-Fit-Hash)'
        required: false
        example: e892eac7e0c39ec6cb683211aed4f40a
        type: string
      revisions:
        name: revisions
        description: 'If provided, only fits with historical relation to this will be displayed.'
        required: false
        example: 76
        type: integer
      mineOnly:
        name: mineOnly
        description: 'If provided, only the authenticated user''s fits will be returned. If false, or not set, only public fits will be returned.'
        required: false
        example: true
        type: boolean
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success": true,"char": {"id": 93940047,"name": "Veetor Nara"},"items": [{"id": 157,"name": "Example","uploader": {"privacy": "public","char": {"id": 93940047,"name": "Veetor Nara"}},"ship": {"id": 629,"name": "Rupture","size": "cruiser"}}],"count": 1,"error": null}'
        headers: []
        description: '200'
    responseFields:
      success:
        name: success
        description: 'true on normal operation, false on exception'
        type: boolean
      error:
        name: error
        description: 'null on normal operation, string containing error message on exception'
        type: string|null
      char:
        name: char
        description: 'contains the authenticated character''s ID and name'
        type: object
      char.id:
        name: char.id
        description: 'authenticated character''s ID  (might be null on error)'
        type: int|null
      char.name:
        name: char.name
        description: 'authenticated character''s name (might be null on error)'
        type: string|null
      items:
        name: items
        description: 'array contains the fits'' short forms'
        type: array
      'items.*.id':
        name: 'items.*.id'
        description: 'Fit ID'
        type: integer
      'items.*.name':
        name: 'items.*.name'
        description: 'Fit name'
        type: string
      'items.*.uploader':
        name: 'items.*.uploader'
        description: 'contains the fits'' uploader and privacy selection'
        type: object
      'items.*.uploader.privacy':
        name: 'items.*.uploader.privacy'
        description: 'Enum field, values: ''public'', ''incognito'', ''private''. If incognito is set, the char id and name are set to <strong>null</strong>'
        type: string
      'items.*.uploader.char.id':
        name: 'items.*.uploader.char.id'
        description: 'Fit uploader''s ID (null,incognito privacy setting)'
        type: ''
      'items.*.uploader.char.name':
        name: 'items.*.uploader.char.name'
        description: 'Fit uploader''s name (null,incognito privacy setting)'
        type: ''
      'items.*.uploader.ship':
        name: 'items.*.uploader.ship'
        description: 'Contains the fit hull ID, hull name, and hull size'
        type: object
      'items.*.uploader.ship.id':
        name: 'items.*.uploader.ship.id'
        description: 'Hull ID'
        type: integer
      'items.*.uploader.ship.name':
        name: 'items.*.uploader.ship.name'
        description: 'Hull name'
        type: string
      'items.*.uploader.ship.size':
        name: 'items.*.uploader.ship.size'
        description: 'Hull size (''frigate'', ''destroyer'', ''cruiser'')'
        type: string
      count:
        name: count
        description: 'contains how many records were returned'
        type: integer
  -
    httpMethods:
      - GET
    uri: 'api/conduit/v1/fits/get/{id}'
    metadata:
      title: 'Get a single fit'
      description: 'Gets most data for a fit. Cached for a minute.'
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the get.'
        required: true
        example: ut
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"char":{"id":93940047,"name":"Veetor Nara"},"item":{"id":76,"name":"Easy passive Gila","uploader":{"privacy":"public","char":{"id":93940047,"name":"Veetor Nara"}},"ship":{"id":17715,"name":"Gila","size":"cruiser"},"eft":"[Gila, Easy passive Gila]\r\n\r\nDrone Damage Amplifier II\r\nDrone Damage Amplifier II\r\nDrone Damage Amplifier II\r\n\r\nCaldari Navy Large Shield Extender\r\nCaldari Navy Large Shield Extender\r\nCaldari Navy Large Shield Extender\r\nAdaptive Invulnerability Shield Hardener II\r\nAdaptive Invulnerability Shield Hardener II\r\nFederation Navy 10MN Afterburner\r\n\r\nRapid Light Missile Launcher II, Caldari Navy Nova Light Missile\r\nRapid Light Missile Launcher II, Caldari Navy Nova Light Missile\r\nRapid Light Missile Launcher II, Caldari Navy Nova Light Missile\r\nRapid Light Missile Launcher II, Caldari Navy Nova Light Missile\r\nMedium Ghoul Compact Energy Nosferatu\r\n\r\nMedium Core Defense Field Purger II\r\nMedium Core Defense Field Purger II\r\nMedium Core Defense Field Purger II\r\n\r\n\r\nRepublic Fleet Valkyrie x2\r\nRepublic Fleet Valkyrie x2\r\nValkyrie II x2\r\nValkyrie II x2\r\nValkyrie II x2","flexibleFitHash":"e892eac7e0c39ec6cb683211aed4f40a","tags":["Afterburner","Strong drones","Missiles","Shield regen tank"],"stats":{"offense":{"totalDps":"566.9","weaponDps":"121.62","droneDps":"445.28","totalVolley":"2303.62"},"defense":{"ehp":{"total":"51801.874919544","shield":"43082.278457411","armor":"4074.0740740741","hull":"4645.5223880597"},"resists":{"shield":{"em":"0.5418","therm":"0.6334","kin":"0.7251","exp":"0.7709"},"armor":{"em":"0.5","therm":"0.45","kin":"0.25","exp":"0.1"},"hull":{"em":"0.33","therm":"0.33","kin":"0.33","exp":"0.33"}},"reps":{"burst":{"shieldRegen":"272.32","shieldBoost":"0","armor":"0","hull":"0","total":"272.32"},"sustained":{"shieldRegen":"272.32","shieldBoost":"0","armor":"0","hull":"0","total":"272.32"}}},"misc":{"ship":{"id":"17715","name":"Gila","cpuMax":"475","powerMax":"837.5","cpuUsed":"448","pgUsed":"829.7","calibrationUsed":"225","warpSpeed":"4"},"drones":{"activeDrones":"2","droneBayTotal":"100","droneBandwidthUsed":"20","droneBayUsed":"20"},"maxSpeed":"697.65","signature":"247.91","capacitor":{"capacity":"1750","stable":"1","stableAt":"90.48"},"targeting":{"range":"72500","resolution":"356.25","strength":"26.4"}}},"status":"works","price":462898985},"error":null}'
        headers: []
        description: '200'
    responseFields:
      success:
        name: success
        description: 'true on normal operation, false on exception'
        type: boolean
      error:
        name: error
        description: 'null on normal operation, string containing error message on exception'
        type: string|null
      char:
        name: char
        description: 'contains the authenticated character''s ID and name'
        type: object
      char.id:
        name: char.id
        description: 'authenticated character''s ID  (might be null on error)'
        type: int|null
      char.name:
        name: char.name
        description: 'authenticated character''s name (might be null on error)'
        type: string|null
      item:
        name: item
        description: 'contains the fit''s extended form'
        type: object
      item.id:
        name: item.id
        description: 'Fit ID'
        type: integer
      item.name:
        name: item.name
        description: 'Fit name'
        type: string
      item.flexibleFitHash:
        name: item.flexibleFitHash
        description: 'Fit hash (see https://github.com/molbal/abyss-tracker/wiki/Flexible-Fit-Hash)'
        type: string
      item.uploader:
        name: item.uploader
        description: 'contains the fits'' uploader and privacy selection'
        type: object
      item.uploader.privacy:
        name: item.uploader.privacy
        description: 'Enum field, values: ''public'', ''incognito'', ''private''. If incognito is set, the char id and name are set to <strong>null</strong>'
        type: string
      item.uploader.char.id:
        name: item.uploader.char.id
        description: 'Fit uploader''s ID (null,incognito privacy setting)'
        type: ''
      item.uploader.char.name:
        name: item.uploader.char.name
        description: 'Fit uploader''s name (null,incognito privacy setting)'
        type: ''
      item.uploader.ship:
        name: item.uploader.ship
        description: 'Contains the fit hull ID, hull name, and hull size'
        type: object
      item.uploader.ship.id:
        name: item.uploader.ship.id
        description: 'Hull ID'
        type: integer
      item.uploader.ship.name:
        name: item.uploader.ship.name
        description: 'Hull name'
        type: string
      item.uploader.ship.size:
        name: item.uploader.ship.size
        description: 'Hull size (''frigate'', ''destroyer'', ''cruiser'')'
        type: string
      item.eft:
        name: item.eft
        description: 'The raw EFT uploaded by the creator'
        type: string
      item.tags:
        name: item.tags
        description: 'array Contains applicable tags (Automatically generated)'
        type: ''
      item.stats:
        name: item.stats
        description: 'array Stat''s array, please see <a href=''https://github.com/molbal/svcfitstat/''>SVCFITSTAT</a> for schema'
        type: ''
      item.status:
        name: item.status
        description: 'How well is the fit tested? Enum: ''untested'', ''works'', ''deprecated'''
        type: string
      item.price:
        name: item.price
        description: 'estimated ISK value of the fit'
        type: integer
      count:
        name: count
        description: 'contains how many records were returned'
        type: integer
  -
    httpMethods:
      - POST
    uri: api/conduit/v1/fits/ffh/calculate
    metadata:
      title: 'Calculate Flexible Fit Hash'
      description: 'Calculates Flexible Fit Hash of a given fit. More about FFH: https://github.com/molbal/abyss-tracker/wiki/Flexible-Fit-Hash'
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      eft:
        name: eft
        description: 'Raw EFT string to calculate FFH from         *'
        required: false
        example: dolorem
        type: string
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"char":{"id":93940047,"name":"Veetor Nara"},"flexibleFitHash":"e892eac7e0c39ec6cb683211aed4f40a","error":null}'
        headers: []
        description: '200'
    responseFields:
      success:
        name: success
        description: 'true on normal operation, false on exception'
        type: boolean
      error:
        name: error
        description: 'null on normal operation, string containing error message on exception'
        type: string|null
      char:
        name: char
        description: 'contains the authenticated character''s ID and name'
        type: object
      char.id:
        name: char.id
        description: 'authenticated character''s ID  (might be null on error)'
        type: int|null
      char.name:
        name: char.name
        description: 'authenticated character''s name (might be null on error)'
        type: string|null
      flexibleFitHash:
        name: flexibleFitHash
        description: 'Calculated FFH'
        type: string
